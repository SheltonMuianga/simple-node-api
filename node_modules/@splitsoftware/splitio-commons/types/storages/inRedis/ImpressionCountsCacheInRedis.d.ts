import { Redis } from 'ioredis';
import { ILogger } from '../../logger/types';
import { ImpressionCountsPayload } from '../../sync/submitters/types';
import { ImpressionCountsCacheInMemory } from '../inMemory/ImpressionCountsCacheInMemory';
export declare class ImpressionCountsCacheInRedis extends ImpressionCountsCacheInMemory {
    private readonly log;
    private readonly key;
    private readonly redis;
    private readonly refreshRate;
    private intervalId;
    constructor(log: ILogger, key: string, redis: Redis, impressionCountsCacheSize?: number, refreshRate?: number);
    private postImpressionCountsInRedis;
    start(): void;
    stop(): Promise<boolean | import("ioredis").BooleanResponse | undefined>;
    getImpressionsCount(): Promise<ImpressionCountsPayload | undefined>;
}
