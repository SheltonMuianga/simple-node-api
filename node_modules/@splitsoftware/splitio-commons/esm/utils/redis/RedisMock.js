//@ts-nocheck
function identityFunction(data) {
    return data;
}
function asyncFunction(data) {
    return Promise.resolve(data);
}
var IDENTITY_METHODS = [];
var ASYNC_METHODS = ['rpush', 'hincrby'];
var PIPELINE_METHODS = ['rpush', 'hincrby'];
var RedisMock = /** @class */ (function () {
    function RedisMock() {
        var _this = this;
        this.pipelineMethods = { exec: jest.fn(asyncFunction) };
        IDENTITY_METHODS.forEach(function (method) {
            _this[method] = jest.fn(identityFunction);
        });
        ASYNC_METHODS.forEach(function (method) {
            _this[method] = jest.fn(asyncFunction);
        });
        PIPELINE_METHODS.forEach(function (method) {
            _this.pipelineMethods[method] = _this[method];
        });
        this.pipeline = jest.fn(function () { return _this.pipelineMethods; });
    }
    return RedisMock;
}());
export { RedisMock };
